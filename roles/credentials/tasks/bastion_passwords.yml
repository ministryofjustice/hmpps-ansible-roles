---

- name: Generate us a random password length between 32 and 64 chars
  set_fact:
    password_length: "{{ 64|random(32) }}"
    user_suffix: "{{ user.username|replace('_', '/') }}/password"
    key_path:  "{{ prefix + '' + user.username|replace('_', '/') + '/password' }}"
  delegate_to: localhost

- name: Output our qualfied path
  debug:
    msg: "Processing {{ key_path }}"
  delegate_to: localhost

- name: Create a new password
  set_fact:
    this_password_value: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits,hexdigits length=' + password_length|default(32)| string()) }}"
  no_log: true
  delegate_to: localhost

- name: Remove tmp file
  file:
    path: /tmp/passwordfile
    state: absent
  no_log: true
  delegate_to: localhost

- name: Crypt our password for updating the user
  command: python -c 'import crypt; print crypt.crypt("{{ this_password_value }}", "$1${{ ansible_date_time.epoch }}$")'
  no_log: true
  delegate_to: localhost
  register: password_crypt

- name: Update our password on our host
  user:
    name: "{{ user.username }}"
    password: "{{ password_crypt.stdout }}"
    update_password: always
  hosts: bastion
  become: true
  no_log: true

- name: Create or update secure key/value pair with default kms key (aws/ssm)
  aws_ssm_parameter_store:
    name: "{{ key_path }}"
    description: "{{ user.username }} password for ssh"
    string_type: "SecureString"
    value: "{{ this_password_value }}"
  no_log: true
  delegate_to: localhost
