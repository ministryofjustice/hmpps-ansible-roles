---

- block:
    - block:
        - name: Generate a password for our keypair
          set_fact:
            keypair_password: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits,hexdigits length=' + password_length|default(32)| string()) }}"
          no_log: true

        - name: Remove tmp file
          file:
            path: /tmp/passwordfile
            state: absent
          no_log: true

        - name: Save our ssh password
          include_tasks: create_ssm_entry.yml
          vars:
            key_name: "/{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}/ssh_passphrase"
            key_type: "SecureString"
            password_value: "{{ keypair_password }}"
            description: "Auto generated passphrase for /{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}"

      when: credentials.hasPassword|default(False)

    - block:
        - name: Generate a password for our keypair
          set_fact:
            keypair_password: ""
          no_log: true
      when: not credentials.hasPassword|default(False)

    - name: Remove our keys if they exist
      file:
        path: "/tmp/id_rsa_{{ credentials.name }}*"
        state: absent
      no_log: true

    - name: Create our ssh_keypair
      shell: "rm /tmp/id_rsa_*; ssh-keygen -q -b 2048 -f /tmp/id_rsa_{{ credentials.name }} -N '{{ keypair_password }}' -C 'Managed by Ansible'"
      register: credentials_result
      no_log: true

    - name: Set key facts
      set_fact:
        private_key: "{{ lookup('file', '/tmp/id_rsa_' + credentials.name ) }}"
        public_key: "{{ lookup('file', '/tmp/id_rsa_' + credentials.name + '.pub') }}"
      no_log: true

    - name: Remove our keys
      file:
        path: "/tmp/id_rsa_{{ credentials.name }}*"
        state: absent
      no_log: true

    - name: Save our ssh private key
      include_tasks: create_ssm_entry.yml
      vars:
        key_name: "/{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}/ssh_private_key"
        key_type: "SecureString"
        password_value: "{{ private_key }}"
        description: "Auto generated ssh private key for /{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}"

    - name: Save our ssh public key
      include_tasks: create_ssm_entry.yml
      vars:
        key_name: "/{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}/ssh_public_key"
        key_type: "String"
        password_value: "{{ public_key }}"
        description: "Auto generated ssh public key for /{{ target }}/{{ account }}/{{ vars.product.name }}/{{ vars.namespaces.name }}/{{ credentials.name }}"

  when: credentials.type == 'ssh-key'